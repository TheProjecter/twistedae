[buildout]
develop = . src/demo
extends = etc/versions.cfg
parts =
    libevent
    memcached
    libmemcached
    pylibmc
    mongodb
    demo
    twistedae
    python
    tests
    nginx
    nginxctl
    supervisor
    supervisor-config
versions = versions
allow-picked-versions = false

[libevent]
recipe = zc.recipe.cmmi
url = http://www.monkey.org/~provos/libevent-1.4.12-stable.tar.gz

[memcached]
recipe = zc.recipe.cmmi
url = http://memcached.googlecode.com/files/memcached-1.4.0.tar.gz
extra_options = --with-libevent=${libevent:location} --bindir=${buildout:directory}/bin
environment =
    CFLAGS=-I${libevent:location}/include
    LDFLAGS=-L${libevent:location}/lib

[libmemcached]
recipe = zc.recipe.cmmi
url = http://download.tangent.org/libmemcached-0.31.tar.gz
extra_options = --with-memcached=${buildout:directory}/bin/memcached

[pylibmc]
recipe = zc.recipe.egg:custom
egg = pylibmc
include-dirs = ${libmemcached:location}/include
library-dirs = ${libmemcached:location}/lib
rpath = ${libmemcached:location}/lib

[mongodb]
recipe = rod.recipe.mongodb
darwin-32bit-url = http://downloads.mongodb.org/osx/mongodb-osx-i386-0.9.7.tgz
linux2-32bit-url = http://downloads.mongodb.org/linux/mongodb-linux-i686-0.9.7.tgz

[demo]
recipe = rod.recipe.appengine
eggs = demo
zip-packages = False
url = http://googleappengine.googlecode.com/files/google_appengine_1.2.4.zip

[twistedae]
recipe = zc.recipe.egg
eggs =
    twistedae
    twistedae [mongo]
    twistedae [memcached]
extra-paths =
    ${buildout:directory}/parts/google_appengine
    ${buildout:directory}/parts/google_appengine/lib/antlr3
    ${buildout:directory}/parts/google_appengine/lib/django
    ${buildout:directory}/parts/google_appengine/lib/webob
    ${buildout:directory}/parts/google_appengine/lib/yaml/lib
entry-points =
    appserver=twistedae.fcgiserver:main
initialization = 
    import os
    env=os.environ
    env['TMPDIR']=os.path.join('${buildout:directory}', 'var')
    env['APP_ROOT']=os.path.join('${buildout:directory}', 'parts', 'demo')

[python]
recipe = zc.recipe.egg
eggs =
    ${twistedae:eggs}
extra-paths =
    ${twistedae:extra-paths}
interpreter = python
scripts = python

[tests]
recipe = zc.recipe.egg
eggs =
    ${twistedae:eggs}
    nose
extra-paths =
    ${twistedae:extra-paths}

[nginx]
recipe = zc.recipe.cmmi
url = http://sysoev.ru/nginx/nginx-0.7.61.tar.gz
extra_options = --without-http_rewrite_module

[nginxctl]
recipe = gocept.nginx
nginx = nginx
configuration =
    daemon off;
    worker_processes 1;

    events {
        worker_connections  1024;
    }

    http {
        include            ${nginx:location}/conf/mime.types;
        default_type       application/octet-stream;
        sendfile           on;
        keepalive_timeout  65;

        server {
            listen      8080;
            server_name localhost;

            access_log  ${nginx:location}/logs/access.log;
            error_log   ${nginx:location}/logs/error.log;
            root        ${buildout:directory}/parts/demo;

            location /static
            {
                root    ${buildout:directory}/parts/demo;
            }

            location / {
                # Host and port to FastCGI server
                fastcgi_pass 127.0.0.1:8081;
                fastcgi_param CONTENT_LENGTH $content_length;
                fastcgi_param CONTENT_TYPE $content_type;
                fastcgi_param PATH_INFO $fastcgi_script_name;
                fastcgi_param QUERY_STRING $query_string;
                fastcgi_param REQUEST_METHOD $request_method;
                fastcgi_param REQUEST_URI $request_uri;
                fastcgi_pass_header Authorization;
                fastcgi_intercept_errors off;
            }
        }
    }

[supervisor]
recipe = zc.recipe.egg

[supervisor-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/supervisord.conf.in
output = ${buildout:directory}/etc/supervisord.conf

[buildout]
develop = . src/demo
parts =
    libevent
    memcached
    libmemcached
    pylibmc
    demo
    twistedae
    python
    nginx
    nginxctl
#    httpd
#    apache
#    modwsgi

[libevent]
recipe = zc.recipe.cmmi
url = http://www.monkey.org/~provos/libevent-1.4.12-stable.tar.gz

[memcached]
recipe = zc.recipe.cmmi
url = http://memcached.googlecode.com/files/memcached-1.4.0.tar.gz
extra_options = --with-libevent=${libevent:location} --bindir=${buildout:directory}/bin

[libmemcached]
recipe = zc.recipe.cmmi
url = http://download.tangent.org/libmemcached-0.31.tar.gz
extra_options = --with-memcached=${buildout:directory}/bin/memcached

[pylibmc]
recipe = zc.recipe.egg:custom
include-dirs = ${libmemcached:location}/include
rpath = ${libmemcached:location}/lib

[demo]
recipe = rod.recipe.appengine
eggs =
    demo
zip-packages = False
url = http://googleappengine.googlecode.com/files/google_appengine_1.2.4.zip

[twistedae]
recipe = zc.recipe.egg
eggs =
    pylibmc
    twistedae
    twistedae [mongo]
    twistedae [memcached]
extra-paths =
    ${buildout:directory}/parts/google_appengine
    ${buildout:directory}/parts/google_appengine/lib/antlr3
    ${buildout:directory}/parts/google_appengine/lib/django
    ${buildout:directory}/parts/google_appengine/lib/webob
    ${buildout:directory}/parts/google_appengine/lib/yaml/lib
entry-points =
    twistd=twisted.scripts.twistd:run
    trial=twisted.scripts.trial:run
initialization = import os; os.environ['APP_PATH']=os.path.join('${buildout:directory}', 'parts', 'demo'); os.environ['TMPDIR']=os.path.join('${buildout:directory}', 'var')

[python]
recipe = zc.recipe.egg
eggs =
    ${twistedae:eggs}
extra-paths =
    ${twistedae:extra-paths}
interpreter = python
scripts = python

[nginx]
recipe = gocept.cmmi
url = http://sysoev.ru/nginx/nginx-0.7.61.tar.gz
md5sum = 6ebf89b9b00a3b82734e93c32da7df07
extra-options = --without-http_rewrite_module

[nginxctl]
recipe = gocept.nginx
hostname = localhost
port = 8080
configuration =
    worker_processes  1;

    events {
        worker_connections  1024;
    }

    http {
        include            ${nginx:location}/conf/mime.types;
        default_type       application/octet-stream;
        sendfile           on;
        keepalive_timeout  65;

        #gzip  on;

        server {
            listen      8080;
            server_name localhost;

            access_log  ${nginx:location}/logs/access.log;
            error_log   ${nginx:location}/logs/error.log;
            root        ${buildout:directory}/parts/demo;

            location /static
            {
                root    ${buildout:directory}/parts/demo;
            }

            location / {
                # Host and port to FastCGI server
                fastcgi_pass 127.0.0.1:8081;
                fastcgi_param PATH_INFO $fastcgi_script_name;
                fastcgi_param REQUEST_METHOD $request_method;
                fastcgi_param QUERY_STRING $query_string;
                fastcgi_param CONTENT_TYPE $content_type;
                fastcgi_param CONTENT_LENGTH $content_length;
                fastcgi_pass_header Authorization;
                fastcgi_intercept_errors off;
            }
        }
    }

[httpd]
recipe = tl.buildout_apache:httpd
url = http://ftp.fernuni-hagen.de/ftp-dir/pub/mirrors/www.apache.org/httpd/httpd-2.2.13.tar.gz
md5sum = 2803e35be6650f5b739e6e91faa824dd
extra-options = --enable-rewrite=shared

[apache]
recipe = tl.buildout_apache:root
user = daemon
group = daemon
listen = 127.0.0.1:8081
modules = authz_host rewrite wsgi
servername = localhost:8081
htdocs = ${buildout:directory}/parts/demo
ulimit =
sysconf-dir = ${buildout:directory}/parts/httpd/conf
extra-config =
  <VirtualHost *:8081>

    ServerName localhost
    ServerAlias localhost
    ServerAdmin webmaster@example.com

    DocumentRoot ${buildout:directory}/parts/demo

    <Directory ${buildout:directory}/parts/demo>
    Order allow,deny
    Allow from all
    </Directory>

    WSGIScriptAlias / ${buildout:directory}/parts/demo/app.wsgi

    <Directory ${buildout:directory}/parts/demo>
    Order allow,deny
    Allow from all
    </Directory>

  </VirtualHost>

[modwsgi]
recipe = zc.recipe.cmmi
url = http://modwsgi.googlecode.com/files/mod_wsgi-3.0c4.tar.gz
extra_options = --with-python=${buildout:directory}/bin/python --with-apxs=${buildout:directory}/parts/httpd/bin/apxs
